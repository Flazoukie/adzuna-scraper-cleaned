name: Update Job Visuals and Push to Blog

on:
  schedule:
    - cron: '0 8 * * 1'  # Every Monday at 08:00 UTC
  workflow_dispatch:    # Allows manual trigger

jobs:
  update-blog:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout scraper repo
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.12'  # Use stable version

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt

    - name: Run scraper
      run: python adzuna_scraper.py

    - name: Verify CSV file exists and list files
      run: |
        echo "Checking contents of data directory:"
        ls -lh data/

    - name: Preview first 10 lines of CSV file(s)
      run: |
        head -n 10 data/jobs_*.csv || echo "No data to preview"

    - name: Check CSV file size
      run: |
        for f in data/jobs_*.csv; do
          echo "File: $f"
          stat $f
        done

    - name: Wait 5 seconds to ensure file write completes
      run: sleep 5

    - name: Test CSV readability with pandas
      run: |
        pip install pandas
        python -c "
import glob
import pandas as pd

files = glob.glob('data/jobs_*.csv')
if not files:
    print('No CSV files found in data/')
    exit(1)

latest_file = max(files)
print(f'Reading CSV file: {latest_file}')
try:
    df = pd.read_csv(latest_file, encoding='utf-8', engine='python', on_bad_lines='skip')
    print(f'Read {len(df)} rows and {len(df.columns)} columns')
    print(df.head())
except Exception as e:
    print(f'Error reading CSV: {e}')
    exit(1)
"

    - name: Run notebook to generate visuals
      run: |
        pip install jupyter pandas matplotlib seaborn folium
        jupyter nbconvert --execute analyze_jobs.ipynb --to notebook --inplace

    - name: Clone blog repo
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "actions@github.com"
        git clone https://x-access-token:${{ secrets.BLOG_REPO_TOKEN }}@github.com/Flazoukie/data-blog.git blog

    - name: Copy output to blog
      run: |
        mkdir -p blog/posts/latest-jobs
        cp output/* blog/posts/latest-jobs/

    - name: Commit and push to blog repo
      run: |
        cd blog
        git add posts/latest-jobs/
        git commit -m "Update latest job visualizations" || echo "No changes to commit"
        git push
